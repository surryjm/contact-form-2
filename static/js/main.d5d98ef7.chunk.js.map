{"version":3,"sources":["firebase/setupFirebase.js","firebase/db.js","ContactForm/ContactFormFields/ContactFormFields.js","ContactForm/ContactFormSuccessMsg/ContactFormSuccessMsg.js","ContactForm/Nav/Nav.js","ContactForm/Routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","db","firestore","ContactFormFields","state","name","email","message","handleInputChange","event","target","value","setState","onFormSubmit","preventDefault","collection","add","createdAt","Date","then","docRef","props","history","push","axios","method","url","data","response","console","log","catch","error","className","onSubmit","this","htmlFor","type","id","required","onChange","Component","ContactFormSuccessMsg","React","Nav","to","Routes","exact","path","component","Fragment","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAIAA,IAASC,cAAc,CACrBC,OAAQC,0CACRC,WAAYD,qCACZE,UAAWF,uB,2HCHEG,EAFJN,IAASO,Y,eCGCC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,QAAS,I,EAGXC,kBAAoB,SAACC,GACnB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfN,EAAOK,EAAOL,KAEpB,EAAKO,SAAL,eACGP,EAAOM,K,EAIZE,aAAe,SAACJ,GACdA,EAAMK,iBAENb,EAAGc,WAAW,gBACbC,IAAI,CACHX,KAAM,EAAKD,MAAMC,KACjBC,MAAO,EAAKF,MAAME,MAClBC,QAAS,EAAKH,MAAMG,QACpBU,UAAW,IAAIC,OAEhBC,MAAK,SAACC,GACL,EAAKR,SAAS,CACZP,KAAM,GACNC,MAAO,GACPC,QAAS,KAEb,EAAKc,MAAMC,QAAQC,KAAK,4BAGxBC,IAAM,CACJC,OAAQ,OACRC,IAAK,QACLC,KAAM,CACJtB,KAAM,EAAKD,MAAMC,KACjBC,MAAO,EAAKF,MAAME,MAClBC,QAAS,EAAKH,MAAMG,WAGvBY,MAAK,SAACS,GACLC,QAAQC,IAAIF,MAEbG,OAAM,SAACC,GACNH,QAAQC,IAAIE,O,4CAMhB,WAEE,OACE,sBAAKC,UAAU,yBAAf,UACE,yCACA,uBAAMC,SAAUC,KAAKtB,aAAcY,OAAO,OAA1C,UACE,+BACE,+BACE,uBAAOW,QAAQ,OAAf,mBACA,uBACEC,KAAK,OACLC,GAAG,OACHjC,KAAK,OACLkC,UAAQ,EACR5B,MAAOwB,KAAK/B,MAAMC,KAClBmC,SAAUL,KAAK3B,uBAGnB,+BACE,uBAAO4B,QAAQ,QAAf,oBACA,uBACEC,KAAK,QACLC,GAAG,QACHjC,KAAK,QACLkC,UAAQ,EACR5B,MAAOwB,KAAK/B,MAAME,MAClBkC,SAAUL,KAAK3B,uBAGnB,+BACE,uBAAO4B,QAAQ,MAAf,sBACA,0BACEE,GAAG,MACHjC,KAAK,UACLkC,UAAQ,EACR5B,MAAOwB,KAAK/B,MAAMG,QAClBiC,SAAUL,KAAK3B,0BAIrB,wBAAQyB,UAAU,WAAWI,KAAK,SAAlC,8B,GA/FqCI,aCF1BC,G,kKAEnB,WACE,OACE,sBAAKT,UAAU,yBAAf,UACE,4CACA,2E,GAN2CU,IAAMF,YCCpCG,G,kKACnB,WACE,OACE,qBAAKX,UAAU,gBAAf,SACE,cAAC,IAAD,CAAMA,UAAU,MAAMY,GAAG,IAAzB,wC,GAJyBF,IAAMF,YCOxB,SAASK,IACtB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9C,IACjC,eAAC,IAAM+C,SAAP,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOF,KAAK,wBAAwBC,UAAWP,YCN1CS,MARf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACE,cAACa,EAAD,OCKSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d5d98ef7.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n// Required for side-effects\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\r\n});","import firebase from 'firebase';\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default db;","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport db from '../../firebase/db';\r\nimport './ContactFormFields.css';\r\n\r\nexport default class ContactFormFields extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    message: ''\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    db.collection('contactForms')\r\n    .add({\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      message: this.state.message,\r\n      createdAt: new Date()\r\n    })\r\n    .then((docRef) => {\r\n      this.setState({\r\n        name: '',\r\n        email: '',\r\n        message: ''\r\n      });\r\n    this.props.history.push('/contact-form-success');\r\n    });\r\n\r\n    axios({\r\n      method: 'post',\r\n      url: '/send',\r\n      data: {\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        message: this.state.message\r\n      }\r\n    })\r\n    .then((response) => {\r\n      console.log(response);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"contact-form-container\">\r\n        <h1>Contact</h1>\r\n        <form onSubmit={this.onFormSubmit} method=\"POST\">\r\n          <ul>\r\n            <li>\r\n              <label htmlFor=\"name\">Name:</label>\r\n              <input \r\n                type=\"text\" \r\n                id=\"name\" \r\n                name=\"name\" \r\n                required\r\n                value={this.state.name}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <input \r\n                type=\"email\" \r\n                id=\"email\" \r\n                name=\"email\" \r\n                required\r\n                value={this.state.email}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"msg\">Message:</label>\r\n              <textarea \r\n                id=\"msg\" \r\n                name=\"message\" \r\n                required\r\n                value={this.state.message} \r\n                onChange={this.handleInputChange}\r\n              />\r\n            </li>\r\n          </ul>\r\n          <button className=\"btn-grad\" type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './ContactFormSuccessMsg.css';\r\n\r\nexport default class ContactFormSuccessMsg extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contact-form-container\">\r\n        <h2>Thank you!</h2>\r\n        <p>We'll be in touch with you shortly.</p>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Nav.css';\r\n\r\nexport default class Nav extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"nav-container\">\r\n        <Link className=\"nav\" to=\"/\">Back to Contact Form</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\nimport ContactFormFields from '../ContactFormFields/ContactFormFields';\r\nimport ContactFormSuccessMsg from '../ContactFormSuccessMsg/ContactFormSuccessMsg';\r\nimport Nav from '../Nav/Nav';\r\n\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={ContactFormFields}></Route>\r\n        <React.Fragment>\r\n          <Nav />\r\n          <Route path=\"/contact-form-success\" component={ContactFormSuccessMsg}></Route>\r\n        </React.Fragment>\r\n      </Switch>\r\n    </Router>  \r\n  )\r\n}","import './App.css';\nimport Routes from './ContactForm/Routes/Routes';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './firebase/setupFirebase';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}